/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/greece_gv_real_estate.js":
/*!***********************************************!*\
  !*** ./resources/js/greece_gv_real_estate.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n$(function () {\n  /* Banner Text Slider */\n  if ($(\".property-images-slider\").length) {\n    var property_slider = new Splide('.property-images-slider', {\n      type: 'loop',\n      perPage: 1,\n      perMove: 1,\n      autoplay: true,\n      // type: \"fade\",\n      speed: 1000,\n      interval: 4000,\n      rewind: true,\n      easing: 'ease',\n      drag: false,\n      arrows: false,\n      pagination: false,\n      // Appending the pagination buttons to a specific element\n      // pagination: '#testimonial-slider-container',\n      breakpoints: {\n        991: {\n          perPage: 1\n        }\n      }\n      // autoWidth: true,\n    }).mount();\n  }\n\n  // Align purple line\n  var el = $('#book-a-meeting-section .content-column');\n  var horizontalLine = $('#horizontal-absolute-line');\n  var elementTop = el.offset().top;\n\n  // Get the actual height of the element (excludes margin)\n  var elementHeight = el.outerHeight(false); // includes padding & borders, excludes margins by default\n\n  // Calculate exact bottom position (excluding bottom margin)\n  var elementBottom = elementTop + elementHeight + 15;\n  horizontalLine.css('top', \"\".concat(elementBottom, \"px\"));\n  console.log('Element bottom position:', elementBottom);\n  // End of purple line alignment\n\n  // Insert a loading spinner in all forms with a button type=submit\n  $('form').each(function () {\n    var submitBtn = $(this).find('button[type=\"submit\"]');\n    if (submitBtn.length > 0) {\n      submitBtn.append('<i class=\"submit-loading-spinner fas fa-spinner fa-spin\"></i>');\n    }\n  });\n\n  /* Open modal forms */\n  var downloadGuideButton = $('.download-guide');\n  var guideDownloadForm = $('#brochure-download-form');\n  var modalGlobalContainer = $('.modal-form-global-container');\n\n  // Different popups\n  var brochureGlobalContainer = $('.brochure-modal-container');\n  var abandonPopup = $('.abandon-popup');\n\n  // Button click\n  downloadGuideButton.on('click', function () {\n    brochureGlobalContainer.fadeIn();\n  });\n  guideDownloadForm.on('submit', function (e) {\n    e.preventDefault();\n    var form = $(this)[0]; // Get the raw DOM element\n    var formData = new FormData(form); // Create FormData object\n    var submitButton = $(this).find('button[type=submit]');\n    var loadingSpinner = $(this).find('.submit-loading-spinner');\n\n    // AJAX Request\n    $.ajax({\n      url: \"/download-brochure-submission\",\n      type: \"POST\",\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      },\n      data: formData,\n      processData: false,\n      // Prevent jQuery from automatically transforming the data into a query string\n      contentType: false,\n      // Let the browser set it, including boundary for multipart/form-data\n      beforeSend: function beforeSend() {\n        // Disable the submit button to prevent multiple clicks\n        submitButton.prop('disabled', true);\n        loadingSpinner.css({\n          'display': 'inline-block'\n        });\n      },\n      success: function success(response) {\n        // if (response) {\n        //     console.log('success: ' + response);\n        // } else {\n        //     console.log('error: ' + response);\n        // }\n\n        console.log(response);\n\n        // Open\n        // const openPopup = window.open('assets/ebooks/USInvestorsGuide_PH_2024.pdf', '_blank');\n\n        // // Some browsers may block the window.open, we're going for a fallback in that case\n        // if( openPopup === null ){\n\n        //     // Trigger hidden link click\n        //     $('.brochure-link')[0].click();\n\n        // // Popup wasn't blocked\n        // }else{\n        // }\n\n        // FadeOut the entire modal\n        modalGlobalContainer.fadeOut();\n        Notify('Thank you for your application. We\\'ll be in touch, shortly', null, null, 'success');\n      },\n      error: function error(xhr, status, errorMessage) {\n        Notify('There was an error submitting the form. Please reach us via email', null, null, 'success');\n        console.log(\"RESPONSE: , error: \" + errorMessage);\n      },\n      complete: function complete() {\n        submitButton.prop('disabled', false);\n        loadingSpinner.hide();\n        form.reset();\n        $(\"#cv-file-name\").text('Allowed files: pdf,doc,docx,jpg,jpeg,png');\n        if (window.location.hash !== '#debug') {\n          // window.location.href = \"/thank-you\";\n        }\n      }\n    });\n  });\n\n  // Fade out the global container if not clicked in the modal element\n  modalGlobalContainer.on('click', function (e) {\n    if ($(e.target).is('.modal-form-global-container')) {\n      $(this).fadeOut(300); // Fade out in 300ms\n    }\n  });\n\n  // Close modal container on the ESC key click\n  $(document).on('keydown', function (e) {\n    if (e.key === 'Escape') {\n      var $modal = $('.modal-form-global-container');\n      if ($modal.is(':visible')) {\n        $modal.fadeOut(300);\n      }\n    }\n  });\n\n  /* Abandon Popup */\n  var showExitPopup = true;\n  document.addEventListener('mouseout', function (e) {\n    if (e.clientY < 0 && showExitPopup\n    // &&\n    // !getCookie('exit_popup_shown')\n    ) {\n      // document.getElementById('exit-popup').style.display = 'block';\n      abandonPopup.fadeIn();\n      // alert('don\\'t leave!');\n      // setCookie('exit_popup_shown', 'yes', 7); // Cookie valid for 7 days\n      showExitPopup = false;\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUM7O0VBRUY7RUFDQSxJQUFJa0IsYUFBYSxHQUFHLElBQUk7RUFFeEJILFFBQVEsQ0FBQ0ksZ0JBQWdCLENBQUMsVUFBVSxFQUFFLFVBQVNyQyxDQUFDLEVBQUU7SUFDOUMsSUFDSUEsQ0FBQyxDQUFDc0MsT0FBTyxHQUFHLENBQUMsSUFBSUY7SUFDakI7SUFDQTtJQUFBLEVBQ0Y7TUFDRTtNQUNBdkMsWUFBWSxDQUFDRSxNQUFNLENBQUMsQ0FBQztNQUNyQjtNQUNBO01BQ0FxQyxhQUFhLEdBQUcsS0FBSztJQUN6QjtFQUNKLENBQUMsQ0FBQztBQUVOLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9ncmVlY2VfZ3ZfcmVhbF9lc3RhdGUuanM/ZGNlNyJdLCJzb3VyY2VzQ29udGVudCI6WyIkKGZ1bmN0aW9uKCkge1xuXG4gICAgLyogQmFubmVyIFRleHQgU2xpZGVyICovXG4gICAgaWYoICQoXCIucHJvcGVydHktaW1hZ2VzLXNsaWRlclwiKS5sZW5ndGggKXtcblxuICAgICAgICB2YXIgcHJvcGVydHlfc2xpZGVyID0gbmV3IFNwbGlkZSgnLnByb3BlcnR5LWltYWdlcy1zbGlkZXInLCB7XG4gICAgICAgICAgICB0eXBlOiAnbG9vcCcsXG4gICAgICAgICAgICBwZXJQYWdlOiAxLFxuICAgICAgICAgICAgcGVyTW92ZTogMSxcbiAgICAgICAgICAgIGF1dG9wbGF5OiB0cnVlLFxuICAgICAgICAgICAgLy8gdHlwZTogXCJmYWRlXCIsXG4gICAgICAgICAgICBzcGVlZDogMTAwMCxcbiAgICAgICAgICAgIGludGVydmFsOiA0MDAwLFxuICAgICAgICAgICAgcmV3aW5kOiB0cnVlLFxuICAgICAgICAgICAgZWFzaW5nOiAnZWFzZScsXG4gICAgICAgICAgICBkcmFnOmZhbHNlLFxuICAgICAgICAgICAgYXJyb3dzOiBmYWxzZSxcbiAgICAgICAgICAgIHBhZ2luYXRpb246ZmFsc2UsXG4gICAgICAgICAgICAvLyBBcHBlbmRpbmcgdGhlIHBhZ2luYXRpb24gYnV0dG9ucyB0byBhIHNwZWNpZmljIGVsZW1lbnRcbiAgICAgICAgICAgIC8vIHBhZ2luYXRpb246ICcjdGVzdGltb25pYWwtc2xpZGVyLWNvbnRhaW5lcicsXG4gICAgICAgICAgICBicmVha3BvaW50czoge1xuICAgICAgICAgICAgICAgIDk5MToge1xuICAgICAgICAgICAgICAgICAgICBwZXJQYWdlOiAxXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIGF1dG9XaWR0aDogdHJ1ZSxcbiAgICAgICAgfSkubW91bnQoKTtcbiAgICB9XG5cbiAgICAvLyBBbGlnbiBwdXJwbGUgbGluZVxuICAgIGxldCBlbCA9ICQoJyNib29rLWEtbWVldGluZy1zZWN0aW9uIC5jb250ZW50LWNvbHVtbicpO1xuICAgIGxldCBob3Jpem9udGFsTGluZSA9ICQoJyNob3Jpem9udGFsLWFic29sdXRlLWxpbmUnKTtcbiAgICBsZXQgZWxlbWVudFRvcCA9IGVsLm9mZnNldCgpLnRvcDtcblxuICAgIC8vIEdldCB0aGUgYWN0dWFsIGhlaWdodCBvZiB0aGUgZWxlbWVudCAoZXhjbHVkZXMgbWFyZ2luKVxuICAgIGxldCBlbGVtZW50SGVpZ2h0ID0gZWwub3V0ZXJIZWlnaHQoZmFsc2UpOyAvLyBpbmNsdWRlcyBwYWRkaW5nICYgYm9yZGVycywgZXhjbHVkZXMgbWFyZ2lucyBieSBkZWZhdWx0XG5cbiAgICAvLyBDYWxjdWxhdGUgZXhhY3QgYm90dG9tIHBvc2l0aW9uIChleGNsdWRpbmcgYm90dG9tIG1hcmdpbilcbiAgICBsZXQgZWxlbWVudEJvdHRvbSA9IGVsZW1lbnRUb3AgKyBlbGVtZW50SGVpZ2h0ICsgMTU7XG5cbiAgICBob3Jpem9udGFsTGluZS5jc3MoJ3RvcCcsIGAke2VsZW1lbnRCb3R0b219cHhgKTtcblxuICAgIGNvbnNvbGUubG9nKCdFbGVtZW50IGJvdHRvbSBwb3NpdGlvbjonLCBlbGVtZW50Qm90dG9tKTtcbiAgICAvLyBFbmQgb2YgcHVycGxlIGxpbmUgYWxpZ25tZW50XG5cbiAgICAvLyBJbnNlcnQgYSBsb2FkaW5nIHNwaW5uZXIgaW4gYWxsIGZvcm1zIHdpdGggYSBidXR0b24gdHlwZT1zdWJtaXRcbiAgICAkKCdmb3JtJykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICAgIGNvbnN0IHN1Ym1pdEJ0biA9ICQodGhpcykuZmluZCgnYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKTtcblxuICAgICAgICBpZiAoc3VibWl0QnRuLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHN1Ym1pdEJ0bi5hcHBlbmQoJzxpIGNsYXNzPVwic3VibWl0LWxvYWRpbmctc3Bpbm5lciBmYXMgZmEtc3Bpbm5lciBmYS1zcGluXCI+PC9pPicpO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICAvKiBPcGVuIG1vZGFsIGZvcm1zICovXG4gICAgbGV0IGRvd25sb2FkR3VpZGVCdXR0b24gPSAkKCcuZG93bmxvYWQtZ3VpZGUnKTtcbiAgICBsZXQgZ3VpZGVEb3dubG9hZEZvcm0gPSAkKCcjYnJvY2h1cmUtZG93bmxvYWQtZm9ybScpO1xuICAgIGxldCBtb2RhbEdsb2JhbENvbnRhaW5lciA9ICQoJy5tb2RhbC1mb3JtLWdsb2JhbC1jb250YWluZXInKTtcblxuICAgIC8vIERpZmZlcmVudCBwb3B1cHNcbiAgICBsZXQgYnJvY2h1cmVHbG9iYWxDb250YWluZXIgPSAkKCcuYnJvY2h1cmUtbW9kYWwtY29udGFpbmVyJyk7XG4gICAgbGV0IGFiYW5kb25Qb3B1cCA9ICQoJy5hYmFuZG9uLXBvcHVwJyk7XG5cbiAgICAvLyBCdXR0b24gY2xpY2tcbiAgICBkb3dubG9hZEd1aWRlQnV0dG9uLm9uKCdjbGljaycsIGZ1bmN0aW9uKCl7XG4gICAgICAgIGJyb2NodXJlR2xvYmFsQ29udGFpbmVyLmZhZGVJbigpO1xuICAgIH0pXG5cbiAgICBndWlkZURvd25sb2FkRm9ybS5vbignc3VibWl0JywgZnVuY3Rpb24oZSl7XG5cbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuXG4gICAgICAgIGxldCBmb3JtID0gJCh0aGlzKVswXTsgLy8gR2V0IHRoZSByYXcgRE9NIGVsZW1lbnRcbiAgICAgICAgbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKGZvcm0pOyAvLyBDcmVhdGUgRm9ybURhdGEgb2JqZWN0XG4gICAgICAgIGxldCBzdWJtaXRCdXR0b24gPSAkKHRoaXMpLmZpbmQoJ2J1dHRvblt0eXBlPXN1Ym1pdF0nKTtcbiAgICAgICAgbGV0IGxvYWRpbmdTcGlubmVyID0gJCh0aGlzKS5maW5kKCcuc3VibWl0LWxvYWRpbmctc3Bpbm5lcicpO1xuXG4gICAgICAgIC8vIEFKQVggUmVxdWVzdFxuICAgICAgICAkLmFqYXgoe1xuICAgICAgICAgICAgdXJsOiBcIi9kb3dubG9hZC1icm9jaHVyZS1zdWJtaXNzaW9uXCIsXG4gICAgICAgICAgICB0eXBlOiBcIlBPU1RcIixcbiAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAnWC1DU1JGLVRPS0VOJzogJCgnbWV0YVtuYW1lPVwiY3NyZi10b2tlblwiXScpLmF0dHIoJ2NvbnRlbnQnKVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGRhdGE6IGZvcm1EYXRhLFxuICAgICAgICAgICAgcHJvY2Vzc0RhdGE6IGZhbHNlLCAvLyBQcmV2ZW50IGpRdWVyeSBmcm9tIGF1dG9tYXRpY2FsbHkgdHJhbnNmb3JtaW5nIHRoZSBkYXRhIGludG8gYSBxdWVyeSBzdHJpbmdcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlOiBmYWxzZSwgLy8gTGV0IHRoZSBicm93c2VyIHNldCBpdCwgaW5jbHVkaW5nIGJvdW5kYXJ5IGZvciBtdWx0aXBhcnQvZm9ybS1kYXRhXG4gICAgICAgICAgICBiZWZvcmVTZW5kOiBmdW5jdGlvbiAoKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBEaXNhYmxlIHRoZSBzdWJtaXQgYnV0dG9uIHRvIHByZXZlbnQgbXVsdGlwbGUgY2xpY2tzXG4gICAgICAgICAgICAgICAgc3VibWl0QnV0dG9uLnByb3AoJ2Rpc2FibGVkJywgdHJ1ZSk7XG4gICAgICAgICAgICAgICAgbG9hZGluZ1NwaW5uZXIuY3NzKHsnZGlzcGxheSc6J2lubGluZS1ibG9jayd9KTtcblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3BvbnNlKSB7XG5cbiAgICAgICAgICAgICAgICAvLyBpZiAocmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2coJ3N1Y2Nlc3M6ICcgKyByZXNwb25zZSk7XG4gICAgICAgICAgICAgICAgLy8gfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyAgICAgY29uc29sZS5sb2coJ2Vycm9yOiAnICsgcmVzcG9uc2UpO1xuICAgICAgICAgICAgICAgIC8vIH1cblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcblxuICAgICAgICAgICAgICAgIC8vIE9wZW5cbiAgICAgICAgICAgICAgICAvLyBjb25zdCBvcGVuUG9wdXAgPSB3aW5kb3cub3BlbignYXNzZXRzL2Vib29rcy9VU0ludmVzdG9yc0d1aWRlX1BIXzIwMjQucGRmJywgJ19ibGFuaycpO1xuXG5cbiAgICAgICAgICAgICAgICAvLyAvLyBTb21lIGJyb3dzZXJzIG1heSBibG9jayB0aGUgd2luZG93Lm9wZW4sIHdlJ3JlIGdvaW5nIGZvciBhIGZhbGxiYWNrIGluIHRoYXQgY2FzZVxuICAgICAgICAgICAgICAgIC8vIGlmKCBvcGVuUG9wdXAgPT09IG51bGwgKXtcblxuICAgICAgICAgICAgICAgIC8vICAgICAvLyBUcmlnZ2VyIGhpZGRlbiBsaW5rIGNsaWNrXG4gICAgICAgICAgICAgICAgLy8gICAgICQoJy5icm9jaHVyZS1saW5rJylbMF0uY2xpY2soKTtcblxuICAgICAgICAgICAgICAgIC8vIC8vIFBvcHVwIHdhc24ndCBibG9ja2VkXG4gICAgICAgICAgICAgICAgLy8gfWVsc2V7XG4gICAgICAgICAgICAgICAgLy8gfVxuXG4gICAgICAgICAgICAgICAgLy8gRmFkZU91dCB0aGUgZW50aXJlIG1vZGFsXG4gICAgICAgICAgICAgICAgbW9kYWxHbG9iYWxDb250YWluZXIuZmFkZU91dCgpO1xuXG4gICAgICAgICAgICAgICAgTm90aWZ5KCdUaGFuayB5b3UgZm9yIHlvdXIgYXBwbGljYXRpb24uIFdlXFwnbGwgYmUgaW4gdG91Y2gsIHNob3J0bHknLCBudWxsLCBudWxsLCAnc3VjY2VzcycpO1xuXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uKHhociwgc3RhdHVzLCBlcnJvck1lc3NhZ2UpIHtcblxuICAgICAgICAgICAgICAgIE5vdGlmeSgnVGhlcmUgd2FzIGFuIGVycm9yIHN1Ym1pdHRpbmcgdGhlIGZvcm0uIFBsZWFzZSByZWFjaCB1cyB2aWEgZW1haWwnLCBudWxsLCBudWxsLCAnc3VjY2VzcycpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiUkVTUE9OU0U6ICwgZXJyb3I6IFwiICsgZXJyb3JNZXNzYWdlKTtcblxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGNvbXBsZXRlOiBmdW5jdGlvbigpIHtcblxuICAgICAgICAgICAgICAgIHN1Ym1pdEJ1dHRvbi5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICBsb2FkaW5nU3Bpbm5lci5oaWRlKCk7XG5cbiAgICAgICAgICAgICAgICBmb3JtLnJlc2V0KCk7XG4gICAgICAgICAgICAgICAgJChcIiNjdi1maWxlLW5hbWVcIikudGV4dCgnQWxsb3dlZCBmaWxlczogcGRmLGRvYyxkb2N4LGpwZyxqcGVnLHBuZycpO1xuXG4gICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5sb2NhdGlvbi5oYXNoICE9PSAnI2RlYnVnJykge1xuICAgICAgICAgICAgICAgICAgICAvLyB3aW5kb3cubG9jYXRpb24uaHJlZiA9IFwiL3RoYW5rLXlvdVwiO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSlcblxuICAgIC8vIEZhZGUgb3V0IHRoZSBnbG9iYWwgY29udGFpbmVyIGlmIG5vdCBjbGlja2VkIGluIHRoZSBtb2RhbCBlbGVtZW50XG4gICAgbW9kYWxHbG9iYWxDb250YWluZXIub24oJ2NsaWNrJywgZnVuY3Rpb24oZSkge1xuICAgICAgICBpZiAoJChlLnRhcmdldCkuaXMoJy5tb2RhbC1mb3JtLWdsb2JhbC1jb250YWluZXInKSkge1xuICAgICAgICAgICAgJCh0aGlzKS5mYWRlT3V0KDMwMCk7IC8vIEZhZGUgb3V0IGluIDMwMG1zXG4gICAgICAgIH1cbiAgICB9KTtcblxuXG4gICAgLy8gQ2xvc2UgbW9kYWwgY29udGFpbmVyIG9uIHRoZSBFU0Mga2V5IGNsaWNrXG4gICAgJChkb2N1bWVudCkub24oJ2tleWRvd24nLCBmdW5jdGlvbihlKSB7XG4gICAgICAgIGlmIChlLmtleSA9PT0gJ0VzY2FwZScpIHtcbiAgICAgICAgICAgIGNvbnN0ICRtb2RhbCA9ICQoJy5tb2RhbC1mb3JtLWdsb2JhbC1jb250YWluZXInKTtcblxuICAgICAgICAgICAgaWYgKCRtb2RhbC5pcygnOnZpc2libGUnKSkge1xuICAgICAgICAgICAgICAgICRtb2RhbC5mYWRlT3V0KDMwMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIC8qIEFiYW5kb24gUG9wdXAgKi9cbiAgICBsZXQgc2hvd0V4aXRQb3B1cCA9IHRydWU7XG5cbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW91dCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgZS5jbGllbnRZIDwgMCAmJiBzaG93RXhpdFBvcHVwXG4gICAgICAgICAgICAvLyAmJlxuICAgICAgICAgICAgLy8gIWdldENvb2tpZSgnZXhpdF9wb3B1cF9zaG93bicpXG4gICAgICAgICkge1xuICAgICAgICAgICAgLy8gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V4aXQtcG9wdXAnKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICAgICAgICAgIGFiYW5kb25Qb3B1cC5mYWRlSW4oKTtcbiAgICAgICAgICAgIC8vIGFsZXJ0KCdkb25cXCd0IGxlYXZlIScpO1xuICAgICAgICAgICAgLy8gc2V0Q29va2llKCdleGl0X3BvcHVwX3Nob3duJywgJ3llcycsIDcpOyAvLyBDb29raWUgdmFsaWQgZm9yIDcgZGF5c1xuICAgICAgICAgICAgc2hvd0V4aXRQb3B1cCA9IGZhbHNlO1xuICAgICAgICB9XG4gICAgfSk7XG5cbn0pOyJdLCJuYW1lcyI6WyIkIiwibGVuZ3RoIiwicHJvcGVydHlfc2xpZGVyIiwiU3BsaWRlIiwidHlwZSIsInBlclBhZ2UiLCJwZXJNb3ZlIiwiYXV0b3BsYXkiLCJzcGVlZCIsImludGVydmFsIiwicmV3aW5kIiwiZWFzaW5nIiwiZHJhZyIsImFycm93cyIsInBhZ2luYXRpb24iLCJicmVha3BvaW50cyIsIm1vdW50IiwiZWwiLCJob3Jpem9udGFsTGluZSIsImVsZW1lbnRUb3AiLCJvZmZzZXQiLCJ0b3AiLCJlbGVtZW50SGVpZ2h0Iiwib3V0ZXJIZWlnaHQiLCJlbGVtZW50Qm90dG9tIiwiY3NzIiwiY29uY2F0IiwiY29uc29sZSIsImxvZyIsImVhY2giLCJzdWJtaXRCdG4iLCJmaW5kIiwiYXBwZW5kIiwiZG93bmxvYWRHdWlkZUJ1dHRvbiIsImd1aWRlRG93bmxvYWRGb3JtIiwibW9kYWxHbG9iYWxDb250YWluZXIiLCJicm9jaHVyZUdsb2JhbENvbnRhaW5lciIsImFiYW5kb25Qb3B1cCIsIm9uIiwiZmFkZUluIiwiZSIsInByZXZlbnREZWZhdWx0IiwiZm9ybSIsImZvcm1EYXRhIiwiRm9ybURhdGEiLCJzdWJtaXRCdXR0b24iLCJsb2FkaW5nU3Bpbm5lciIsImFqYXgiLCJ1cmwiLCJoZWFkZXJzIiwiYXR0ciIsImRhdGEiLCJwcm9jZXNzRGF0YSIsImNvbnRlbnRUeXBlIiwiYmVmb3JlU2VuZCIsInByb3AiLCJzdWNjZXNzIiwicmVzcG9uc2UiLCJmYWRlT3V0IiwiTm90aWZ5IiwiZXJyb3IiLCJ4aHIiLCJzdGF0dXMiLCJlcnJvck1lc3NhZ2UiLCJjb21wbGV0ZSIsImhpZGUiLCJyZXNldCIsInRleHQiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsImhhc2giLCJ0YXJnZXQiLCJpcyIsImRvY3VtZW50Iiwia2V5IiwiJG1vZGFsIiwic2hvd0V4aXRQb3B1cCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjbGllbnRZIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/greece_gv_real_estate.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/greece_gv_real_estate.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;