/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/greece_gv_real_estate.js":
/*!***********************************************!*\
  !*** ./resources/js/greece_gv_real_estate.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n$(function () {\n  /* Banner Text Slider */\n  if ($(\".property-images-slider\").length) {\n    var property_slider = new Splide('.property-images-slider', {\n      type: 'loop',\n      perPage: 1,\n      perMove: 1,\n      autoplay: true,\n      // type: \"fade\",\n      speed: 1000,\n      interval: 4000,\n      rewind: true,\n      easing: 'ease',\n      drag: false,\n      arrows: false,\n      pagination: false,\n      // Appending the pagination buttons to a specific element\n      // pagination: '#testimonial-slider-container',\n      breakpoints: {\n        991: {\n          perPage: 1\n        }\n      }\n      // autoWidth: true,\n    }).mount();\n  }\n\n  // Align purple line\n  var el = $('#book-a-meeting-section .content-column');\n  var horizontalLine = $('#horizontal-absolute-line');\n  var elementTop = el.offset().top;\n\n  // Get the actual height of the element (excludes margin)\n  var elementHeight = el.outerHeight(false); // includes padding & borders, excludes margins by default\n\n  // Calculate exact bottom position (excluding bottom margin)\n  var elementBottom = elementTop + elementHeight + 15;\n  horizontalLine.css('top', \"\".concat(elementBottom, \"px\"));\n  console.log('Element bottom position:', elementBottom);\n  // End of purple line alignment\n\n  // Insert a loading spinner in all forms with a button type=submit\n  $('form').each(function () {\n    var submitBtn = $(this).find('button[type=\"submit\"]');\n    if (submitBtn.length > 0) {\n      submitBtn.append('<i class=\"submit-loading-spinner fas fa-spinner fa-spin\"></i>');\n    }\n  });\n\n  /* Open modal forms */\n  var downloadGuideButton = $('.download-guide');\n  var guideDownloadForm = $('#brochure-download-form');\n  var modalGlobalContainer = $('.modal-form-global-container');\n\n  // Button click\n  downloadGuideButton.on('click', function () {\n    modalGlobalContainer.fadeIn();\n  });\n  guideDownloadForm.on('submit', function (e) {\n    e.preventDefault();\n    var form = $(this)[0]; // Get the raw DOM element\n    var formData = new FormData(form); // Create FormData object\n    var submitButton = $(this).find('button[type=submit]');\n    var loadingSpinner = $(this).find('.submit-loading-spinner');\n\n    // AJAX Request\n    $.ajax({\n      url: \"/download-brochure-submission\",\n      type: \"POST\",\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      },\n      data: formData,\n      processData: false,\n      // Prevent jQuery from automatically transforming the data into a query string\n      contentType: false,\n      // Let the browser set it, including boundary for multipart/form-data\n      beforeSend: function beforeSend() {\n        // Disable the submit button to prevent multiple clicks\n        submitButton.prop('disabled', true);\n        loadingSpinner.css({\n          'display': 'inline-block'\n        });\n      },\n      success: function success(response) {\n        // if (response) {\n        //     console.log('success: ' + response);\n        // } else {\n        //     console.log('error: ' + response);\n        // }\n\n        console.log(response);\n\n        // Open\n        // const openPopup = window.open('assets/ebooks/USInvestorsGuide_PH_2024.pdf', '_blank');\n\n        // // Some browsers may block the window.open, we're going for a fallback in that case\n        // if( openPopup === null ){\n\n        //     // Trigger hidden link click\n        //     $('.brochure-link')[0].click();\n\n        // // Popup wasn't blocked\n        // }else{\n        // }\n\n        // FadeOut the entire modal\n        modalGlobalContainer.fadeOut();\n        Notify('Thank you for your application. We\\'ll be in touch, shortly', null, null, 'success');\n      },\n      error: function error(xhr, status, errorMessage) {\n        Notify('There was an error submitting the form. Please reach us via email', null, null, 'success');\n        console.log(\"RESPONSE: , error: \" + errorMessage);\n      },\n      complete: function complete() {\n        submitButton.prop('disabled', false);\n        loadingSpinner.hide();\n        form.reset();\n        $(\"#cv-file-name\").text('Allowed files: pdf,doc,docx,jpg,jpeg,png');\n        if (window.location.hash !== '#debug') {\n          // window.location.href = \"/thank-you\";\n        }\n      }\n    });\n  });\n\n  // Fade out the global container if not clicked in the modal element\n  modalGlobalContainer.on('click', function (e) {\n    if ($(e.target).is('.modal-form-global-container')) {\n      $(this).fadeOut(300); // Fade out in 300ms\n    }\n  });\n\n  // Close modal container on the ESC key click\n  $(document).on('keydown', function (e) {\n    if (e.key === 'Escape') {\n      var $modal = $('.modal-form-global-container');\n      if ($modal.is(':visible')) {\n        $modal.fadeOut(300);\n      }\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/greece_gv_real_estate.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/greece_gv_real_estate.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;