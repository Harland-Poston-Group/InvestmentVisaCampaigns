/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/multistep_form.js":
/*!****************************************!*\
  !*** ./resources/js/multistep_form.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n$(document).ready(function () {\n  // Assigning elements to variables\n  var noAnswerNotification = $('#no-answer-notification');\n  var multistepSection = $('#multistep-form-section');\n  var formLastStepSection = $('#form-last-step-section');\n  var backgroundFade = $('.background-fade');\n  var horizontalLine = $('.horizontal-line');\n\n  // Return to previous form question\n  $(\"body\").on(\"click\", \".prev-btn\", function (e) {\n    e.preventDefault();\n\n    // Find the current question container\n    var currentQuestion = $(this).closest(\".question\");\n\n    // Hide the notification since the user has already moved to the next question\n    noAnswerNotification.hide();\n\n    // If this is the last question - jump to form conclusion\n    if (currentQuestion.prev('.question').hasClass('first-step')) {\n      backgroundFade.css({\n        'opacity': '0'\n      });\n    } else {\n      backgroundFade.css({\n        'opacity': '1'\n      });\n    }\n\n    // Hide the current question\n    currentQuestion.hide();\n\n    // // Show the next question\n    currentQuestion.prev(\".question\").show();\n  });\n\n  // Proceed to next form question\n  $(\"body\").on(\"click\", \".next-btn\", function (e) {\n    e.preventDefault();\n\n    // Find the current question container\n    var currentQuestion = $(this).closest(\".question\");\n\n    // Check if at least one input is selected\n    if (currentQuestion.find(\"input:checked\").length > 0 || currentQuestion.find(\"input\").length < 1) {\n      // Hide the notification since the user has already moved to the next question\n      noAnswerNotification.hide();\n\n      // If this is the last question - jump to form conclusion\n      if (currentQuestion.next('.question').hasClass('last-step')) {\n        backgroundFade.css({\n          'opacity': '0'\n        });\n        horizontalLine.css({\n          'background': '#aa2159'\n        });\n      } else {\n        backgroundFade.css({\n          'opacity': '1'\n        });\n        horizontalLine.css({\n          'background': '#6A257A'\n        });\n      }\n\n      /* Jump to next question */\n\n      // Hide the current question\n      currentQuestion.hide();\n\n      // Show the next question\n      currentQuestion.next(\".question\").show();\n    } else {\n      // Show the notification letting the user know he hasn't answered\n      noAnswerNotification.fadeIn();\n    }\n  });\n\n  // Form Submission\n  $('#multistep-form').on('submit', function (event) {\n    event.preventDefault();\n    var form = $(this);\n    var form_serialized = $(this).serialize();\n    var submitButton = form.find(\"button[type=submit]\");\n    var loadingSpinner = form.find('.submit-loading-spinner');\n    var submitButtonText = submitButton.text();\n    var currentQuestion = $(this).find(\".question:visible\");\n\n    // console.log(currentQuestion);\n    // console.log(currentQuestion.next('.question'));\n\n    // Insert a loading spinner and change the text of the button\n    if (submitButton.length > 0) {\n      submitButton.html('Submitting... <span id=\"spinner\"><svg version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 0 0\" xml:space=\"preserve\" width=\"20px\" height=\"20px\"><path fill=\"#fff\" d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\"><animateTransform attributeName=\"transform\" attributeType=\"XML\" type=\"rotate\" dur=\"1s\" from=\"0 50 50\" to=\"360 50 50\" repeatCount=\"indefinite\" /></path></svg></span>');\n    }\n\n    // Disable the button\n    submitButton.prop('disabled', true);\n    $.ajax({\n      // url: \"/form-submission.php\",\n      url: \"/multistep-form-submission\",\n      type: \"POST\",\n      headers: {\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n      },\n      data: form_serialized,\n      success: function success(response) {\n        if (response) {\n          console.log('success: ' + response);\n\n          // Hide the current question\n          // currentQuestion.hide();\n\n          // // Show the next question\n          // currentQuestion.next(\".question\").show();\n        } else {\n          console.log('error: ' + response);\n        }\n      },\n      error: function error(xhr, status, errorMessage) {\n        console.log(\"RESPONSE: , error: \" + errorMessage);\n      },\n      complete: function complete() {\n        // Revert the button text and remove the spinner\n        submitButton.html(submitButtonText);\n        // submitButton.prop('disabled', false);\n\n        // Redirect the user to the /thankyou page after completion\n\n        // window.location.href = \"/thank-you\";\n\n        if (window.location.hash !== '#debug') {\n          window.location.href = \"/thank-you\";\n        }\n      }\n    });\n  });\n\n  // Adjust vertical position of the horizontal line\n  function adjustPlaceLine() {\n    var $progressWrapper = $('.bottom-progress-wrapper:visible');\n    var $placeLine = $('.place-line');\n    if ($progressWrapper.length && $placeLine.length) {\n      var wrapperOffset = $progressWrapper.offset().top; // Distance from top of the document\n      var wrapperHeight = $progressWrapper.outerHeight(); // Total height of the element\n      var middlePosition = wrapperOffset + wrapperHeight / 2; // Calculate the center point\n\n      $placeLine.css({\n        top: middlePosition + 'px',\n        // Position it at the center of the wrapper\n        left: 0,\n        // Adjust `left` as needed\n        width: '100%',\n        // Adjust width as needed\n        height: '2px',\n        // Set line thickness\n        position: 'absolute' // Ensure it's absolutely positioned\n        // backgroundColor: '#000' // Example styling\n      });\n    }\n  }\n\n  // Place the element in the same vertical line as the progress of the multistep form if it exists in the page\n  if ($('.place-line').length > 0) {\n    adjustPlaceLine();\n\n    // Call on every window resize\n    $(window).on('resize', function () {\n      adjustPlaceLine();\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/multistep_form.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/multistep_form.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;