/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/campaigns.js":
/*!***********************************!*\
  !*** ./resources/js/campaigns.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\ndocument.getElementById('hamburgerMenu').addEventListener('click', function () {\n  var navMenu = document.getElementById('navMenu');\n  navMenu.classList.toggle('active');\n});\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(function (anchor) {\n  anchor.addEventListener('click', function (e) {\n    e.preventDefault();\n    var targetId = this.getAttribute('href');\n\n    // Check if targetId is not just '#'\n    if (targetId !== '#') {\n      var targetElement = document.querySelector(targetId);\n      if (targetElement) {\n        targetElement.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    }\n  });\n});\n$(function () {\n  $(\".nav-menu a\").on(\"click\", function (e) {\n    e.preventDefault();\n    $('.nav-menu').removeClass('active');\n  });\n  $(\".btn-close\").on(\"click\", function () {\n    $('.work-visa-message').hide().removeClass('show');\n  });\n  $(\".what_are_you_looking_for\").change(function () {\n    var val = $(this).val();\n    var alert = $('<div id=\"work-visa-message\" class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\"><a class=\"btn-close\" data-dismiss=\"alert\" aria-label=\"Close\"><i class=\"far fa-times-circle\"></i></a><i class=\"fas fa-info-circle\"></i> You have selected Work Visa<br>Investment Visa does not offer services in regards to Work Visas.</div>');\n    var selectedValue = $(this).val();\n    console.log(\"Selected Value: \" + selectedValue);\n    if (selectedValue === \"Work visa\") {\n      $('.submit-button').attr(\"disabled\", true);\n      // const toast = new bootstrap.Toast(document.querySelector('.toast'));\n      // toast.show({ delay: 50000 });\n      $('.work-visa-message').addClass('show').show();\n    } else {\n      $('.submit-button').attr(\"disabled\", false);\n      $('.work-visa-message').hide().removeClass('show');\n    }\n  });\n});\n$(document).ready(function () {\n  // Check if the user is in a mobile screen\n  function isMobile() {\n    if ($(\"body\").width() < 762) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  var bottomFormContainer = $(\"#slide-up-form-container\");\n  $(\".performance-talk-to-us\").on(\"click\", function () {\n    if (isMobile()) {\n      bottomFormContainer.animate({\n        top: \"0px\"\n      }, 200);\n    } else {\n      var formContainerWidth = bottomFormContainer.width();\n      var calculatedLeft = $(window).width() / 2 - formContainerWidth / 2;\n      bottomFormContainer.animate({\n        top: \"25px\",\n        left: calculatedLeft\n      }, 200);\n    }\n  });\n  $(\"#slide-up-form-container .close-button\").on(\"click\", function () {\n    bottomFormContainer.animate({\n      top: \"100%\"\n    }, 200);\n  });\n\n  /* TOPIC ITEMS CODE SECTION */\n  // $(\".topic-item\").on(\"mouseover\", function(){\n\n  //     let currentHeight = $(this).height();\n\n  //     $(this).find('.topic-title').stop().fadeOut(1);\n  //     $(this).find('.content').stop().fadeIn(200);\n  //     $(this).find('.topic-icon').stop().fadeOut(50);\n  //     $(this).css('height', currentHeight);\n\n  // }).on(\"mouseleave\", function(){\n\n  //     $(this).find('.topic-title').stop().fadeIn(1);\n  //     $(this).find('.content').stop().fadeOut(100);\n  //     $(this).find('.topic-icon').stop().fadeIn(50);\n  //     $(this).css('height', 'unset');\n\n  // });\n\n  // Revamped way of animating the items as the previous one was bugged\n  var hoverTimeout, revertTimeout;\n  $(\".topic-item\").on(\"mouseover\", function () {\n    clearTimeout(revertTimeout); // Clear any pending revert timeout\n\n    var $this = $(this);\n    var currentHeight = $this.height();\n\n    // Apply the active class\n    $this.addClass('active');\n    $this.find('.topic-title').stop().fadeOut(1);\n    $this.find('.content').stop().fadeIn(200);\n    $this.find('.topic-icon').stop().fadeOut(50);\n    $this.css('height', currentHeight);\n\n    // Set a timeout to revert after 3 seconds if not hovered\n    revertTimeout = setTimeout(function () {\n      if (!$this.is(':hover')) {\n        $this.removeClass('active');\n        $this.find('.topic-title').stop().fadeIn(1);\n        $this.find('.content').stop().fadeOut(100);\n        $this.find('.topic-icon').stop().fadeIn(50);\n        $this.css('height', 'unset');\n      }\n    }, 3000);\n  }).on(\"mouseleave\", function () {\n    clearTimeout(revertTimeout); // Clear the revert timeout on mouse leave\n\n    var $this = $(this);\n\n    // Check if we are still hovering and set a timeout to keep active state if still hovered\n    hoverTimeout = setTimeout(function () {\n      if (!$this.is(':hover')) {\n        $this.removeClass('active');\n        $this.find('.topic-title').stop().fadeIn(1);\n        $this.find('.content').stop().fadeOut(100);\n        $this.find('.topic-icon').stop().fadeIn(50);\n        $this.css('height', 'unset');\n      }\n    }, 3000);\n  });\n\n  /* END OF TOPIC ITEMS CODE SECTION\n   /* Banner Text Slider */\n  if ($(\".banner-text-slider\").length) {\n    var testimonial_slide = new Splide('.banner-text-slider', {\n      type: 'loop',\n      perPage: 1,\n      perMove: 1,\n      autoplay: true,\n      interval: 3500,\n      speed: '500',\n      easing: 'ease',\n      arrows: false,\n      pagination: false,\n      // Appending the pagination buttons to a specific element\n      // pagination: '#testimonial-slider-container',\n      breakpoints: {\n        991: {\n          perPage: 1\n        }\n      }\n      // autoWidth: true,\n    }).mount();\n\n    // Adaptar a height do container ao tamanho de cada slider dado que há testimonials com tamanhos diferentes no website\n    testimonial_slide.on('mounted moved', function () {\n      // If we are on mobile, adapt the slider height on each slider move\n      if ($(window).width() < 991) {\n        var active_slide_height = $(\".banner-text-slider .is-visible\").outerHeight();\n\n        // console.log(active_slide_height);\n\n        $(\".banner-text-slider .splide__list\").css(\"height\", active_slide_height + \"px\");\n      }\n    });\n  }\n\n  /* Private Meetings Pages Campaign per Country */\n\n  /* Banner Text Slider */\n  if ($(\".banner-image-slider\").length) {\n    var banner_slider = new Splide('.banner-image-slider', {\n      //type: 'loop',\n      perPage: 1,\n      perMove: 1,\n      autoplay: true,\n      type: \"fade\",\n      speed: 3000,\n      interval: 7000,\n      rewind: true,\n      //easing: 'ease',\n      arrows: false,\n      pagination: false,\n      // Appending the pagination buttons to a specific element\n      // pagination: '#testimonial-slider-container',\n      breakpoints: {\n        991: {\n          perPage: 1\n        }\n      }\n      // autoWidth: true,\n    }).mount();\n\n    // Adaptar a height do container ao tamanho de cada slider dado que há testimonials com tamanhos diferentes no website\n    // testimonial_slide.on('mounted moved', function () {\n\n    //     // If we are on mobile, adapt the slider height on each slider move\n    //     if( $(window).width() < 991 ){\n\n    //         let active_slide_height = $(\".banner-image-slider .is-visible\").outerHeight();\n\n    //         // console.log(active_slide_height);\n\n    //         $(\".banner-image-slider .splide__list\").css(\"height\",active_slide_height+\"px\");\n\n    //     }\n\n    // })\n  }\n  var pmFadeInSection = $(\"#fade-in-booking-section\");\n\n  // Open and bring the booking form fade in section on a click on the BOOK button\n  $(\"#private-meetings-booking-sections .meeting-item .book-button\").on('click', function () {\n    pmFadeInSection.fadeIn(200);\n  });\n  $(\".side-button-link\").on('click', function () {\n    pmFadeInSection.fadeIn(200);\n  });\n  $(\".popup-fade-in-form\").on('click', function () {\n    pmFadeInSection.fadeIn(200);\n  });\n\n  // Close booking form fade in section\n  $(\"#form-container-element-banner .close-button\").on('click', function () {\n    pmFadeInSection.fadeOut();\n  });\n});\n/* Testimonial Slider */\nif ($(\".testimonials-slider\").length) {\n  var testimonial_slide = new Splide('.testimonials-slider', {\n    type: 'loop',\n    perPage: 3,\n    perMove: 1,\n    gap: '50px',\n    autoplay: false,\n    interval: 6000,\n    speed: '500',\n    easing: 'ease',\n    arrows: false,\n    // Appending the pagination buttons to a specific element\n    // pagination: '#testimonial-slider-container',\n    breakpoints: {\n      991: {\n        perPage: 1\n      }\n    }\n    // autoWidth: true,\n  }).mount();\n\n  // Adaptar a height do container ao tamanho de cada slider dado que há testimonials com tamanhos diferentes no website\n  testimonial_slide.on('mounted moved', function () {\n    // If we are on mobile, adapt the slider height on each slider move\n    if ($(window).width() < 991) {\n      var active_slide_height = $(\".testimonials-slider .is-visible\").outerHeight();\n\n      // console.log(active_slide_height);\n\n      $(\".testimonials-slider .splide__list\").css(\"height\", active_slide_height + \"px\");\n    }\n  });\n}\n/* Properties Slider */\nif ($(\".properties-slider\").length) {\n  var properties_slide = new Splide('.properties-slider', {\n    type: 'loop',\n    perPage: 3,\n    perMove: 1,\n    gap: '50px',\n    autoplay: false,\n    interval: 6000,\n    speed: '500',\n    easing: 'ease',\n    arrows: false,\n    // Appending the pagination buttons to a specific element\n    // pagination: '#testimonial-slider-container',\n    breakpoints: {\n      991: {\n        perPage: 1\n      }\n    }\n    // autoWidth: true,\n  }).mount();\n\n  // Adaptar a height do container ao tamanho de cada slider dado que há testimonials com tamanhos diferentes no website\n  properties_slide.on('mounted moved', function () {\n    // If we are on mobile, adapt the slider height on each slider move\n    if ($(window).width() < 991) {\n      var active_slide_height = $(\".properties-slider .is-visible\").outerHeight();\n      // console.log(active_slide_height);\n      $(\".properties-slider .splide__list\").css(\"height\", active_slide_height + \"px\");\n    }\n  });\n}\n$(document).ready(function () {\n  var blacklist = [\"free visa\", \"jobless\", \"work parmit\", \"work permit\", \"uber\", \"need job\", \"need a job\", \"search a job\", \"job\", \"jobs\", \"encountered an error\", \"unsubscribe\", \"marketing emails\", \"language settings\", \"unable to access my account\", \"sponsor visa\", \"sponsorship visa\", \"tourist visa\", \"work visa\", \"fuck\", \"shit\"];\n  $('textarea').on('input', function () {\n    var content = $(this).val();\n    var foundBlacklisted = false;\n\n    // Check if any blacklisted word/sentence exists\n    $.each(blacklist, function (index, word) {\n      var regex = new RegExp('\\\\b' + word + '\\\\b', 'gi'); // Create regex for each blacklisted word\n      if (regex.test(content)) {\n        foundBlacklisted = true;\n        alert(\"You have written '\" + word + \"' Investment Visa does not offer services in regard to '\" + word + \"'.\");\n\n        // Remove the word/sentence from the content\n        content = content.replace(regex, '');\n      }\n    });\n\n    // Update the textarea with the filtered content\n    if (foundBlacklisted) {\n      $('textarea').val(content); // Update if a blacklisted word was found\n    }\n  });\n});\n$(document).ready(function () {\n  // Show/hide the button when scrolling\n  $(window).scroll(function () {\n    if ($(this).scrollTop() > 300) {\n      $('.double-down-chevron-bottom').fadeIn();\n    } else {\n      $('.double-down-chevron-bottom').fadeOut();\n    }\n  });\n\n  // Scroll to top when the button is clicked\n  $('.double-down-chevron-bottom').click(function () {\n    $('html, body').animate({\n      scrollTop: 0\n    }, 'slow');\n    return false;\n  });\n});\n\n/*\ndocument.querySelector('.navbar-toggler').addEventListener('click', function() {\n    this.classList.toggle('collapsed');\n});\n*/\n$(function () {\n  $(window).scroll(function () {\n    var scrollTop = $(this).scrollTop();\n    var windowHeight = $(this).height();\n    var documentHeight = $(document).height();\n    if (scrollTop >= 10) {\n      $('#campaign-navbar').css('position', 'sticky'); // Change color when at bottom\n    } else {\n      $('#campaign-navbar').css('position', 'absolute');\n    }\n\n    // Check if the user has scrolled to the bottom of the page\n    if (scrollTop + windowHeight >= documentHeight - 1) {\n      $('.double-down-chevron-bottom svg').css('fill', '#fff'); // Change color when at bottom\n    }\n    // Check if the scroll is between 800 and 1500\n    else if (scrollTop >= 800 && scrollTop <= 1500) {\n      $('.double-down-chevron-bottom svg').css('fill', '#fff'); // Change color between 800 and 1500\n    }\n    // Otherwise revert color\n    else {\n      $('.double-down-chevron-bottom svg').css('fill', '#6A257A'); // Revert color\n    }\n  });\n});\n\n// Form submission\njQuery(\".catch-submission\").on(\"submit\", function (e) {\n  e.preventDefault();\n  var this_form = jQuery(this).serialize();\n  var this_form_element = jQuery(this);\n  var submitButton = this_form_element.find('button[type=submit]');\n  if (submitButton.length > 0) {\n    submitButton.html('Submitting... <span id=\"spinner\"><svg version=\"1.1\" id=\"L9\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 0 0\" xml:space=\"preserve\" width=\"20px\" height=\"20px\"><path fill=\"#fff\" d=\"M73,50c0-12.7-10.3-23-23-23S27,37.3,27,50 M30.9,50c0-10.5,8.5-19.1,19.1-19.1S69.1,39.5,69.1,50\"><animateTransform attributeName=\"transform\" attributeType=\"XML\" type=\"rotate\" dur=\"1s\" from=\"0 50 50\" to=\"360 50 50\" repeatCount=\"indefinite\" /></path></svg></span>');\n  }\n\n  // Disable the button\n  submitButton.prop('disabled', true);\n  jQuery.ajax({\n    // url: \"/form-submission.php\",\n    url: \"/form-submission\",\n    type: \"POST\",\n    headers: {\n      'X-CSRF-TOKEN': jQuery('meta[name=\"csrf-token\"]').attr('content')\n    },\n    data: this_form,\n    success: function success(response) {\n      if (response) {\n        console.log('success: ' + response);\n\n        // Toastify({\n        //     text: 'Thank you for your enquiry. We\\'ll be in contact, shortly',\n        //     duration: 5000, // 5 seconds\n        //     gravity: \"top\", // top or bottom\n        //     position: \"center\", // left, center, or right\n        //     backgroundColor: \"#6A257A\", // customize color\n        // }).showToast();\n      } else {\n        // Notify(response.error, null, null, 'error');\n        // enquire_button.attr('disabled', false);\n        // grecaptcha.reset(); // Reset the reCAPTCHA widget\n        console.log('error: ' + response);\n      }\n    },\n    error: function error(xhr, status, errorMessage) {\n      console.log(\"RESPONSE: , error: \" + errorMessage);\n    },\n    complete: function complete() {\n      // Revert the button text and remove the spinner\n      submitButton.html('Submit');\n      submitButton.prop('disabled', false);\n      // this_form_element[0].reset();\n      // Redirect the user to the /thankyou page after completion\n\n      if (window.location.hash !== '#debug') {\n        window.location.href = \"/thank-you\";\n      }\n    }\n  });\n});\n$(document).ready(function () {\n  $(window).on('scroll', function () {\n    var scrollPosition = $(this).scrollTop();\n    // console.log('this Scroll position:', scrollPosition);\n\n    if (scrollPosition >= 100) {\n      //  $('#top-header').addClass('active');\n    }\n    if (scrollPosition >= 600) {\n      $('.right-button-scroll').fadeIn().addClass('active');\n    } else {\n      $('.right-button-scroll').hide().removeClass('active');\n      $('#hidden-form').removeClass('active');\n      // $('#top-header').removeClass('active');\n    }\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/campaigns.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/campaigns.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;